#INSRUCTION # 11 ----
q()
setwd("F:/Ense3/1. 1st Semester/Engineering Hydrology/3. BE Project/BE2")
data(L0123001)
library("airGRteaching")
data(L0123001)
View(BasinObs)
BasinObs2 <- BasinObs[,c("DatesR", "P", "E", "Qmm","T")]
PREP <- PrepGR(ObsDF = BasinObs2, HydroModel = "GR4J", CemaNeige = FALSE)
data(L0123001)
plot(BasinObs$Qls, which("ts"))
plot(BasinObs$Qls, which = ("ts"))
plot(BasinObs$Qls,type = "1", which = ("ts"))
plot(BasinObs$Qls)
plot(BasinObs$Qls, BasinObs$DatesR)
plot(BasinObs$DatesR, BasinObs$Qls)
plot(BasinObs$DatesR, BasinObs$Qls, lty ="1")
plot(BasinObs$DatesR, BasinObs$Qls, lty = 1)
plot(BasinObs$DatesR, BasinObs$Qls, lty = 1, cex = 0.5)
plot(BasinObs$DatesR, BasinObs$Qls, lty = 1, cex = 0.2)
plot(BasinObs$DatesR, BasinObs$Qls, lty = 1, cex = 0.25)
plot(BasinObs$DatesR, BasinObs$Qls, lty = 1, cex = 0.27)
plot(BasinObs$DatesR, BasinObs$Qls, lty = 1, cex = 0.30)
plot(BasinObs$DatesR, BasinObs$Qls, lty = 1, cex = 0.40)
plot(BasinObs$DatesR, BasinObs$Qls, lty = 1, cex = 0.50)
library(viridis)
detach("package:viridisLite", unload = TRUE)
library(viridisLite)
plot(BasinObs$DatesR, BasinObs$Qls, lty = 1, cex = 0.50, col = viridis(n=256, option = "D"))
plot(BasinObs$DatesR, BasinObs$Qls, xlab = 'Years', ylab = 'Qls (m3/sec)', main = "Time Series"), lty = 1, cex = 0.50, col = viridis(n=256, option = "D"))
plot(BasinObs$DatesR, BasinObs$Qls, xlab = 'Years', ylab = 'Qls (m3/sec)', main = "Time Series", lty = 1, cex = 0.50, col = viridis(n=256, option = "D"))
#If include=FALSE, knitr will not display the code in the code chunk
#If echo=TRUE, knitr will display the result of executing the code in the code chunk
knitr::opts_chunk$set(echo = TRUE) # sets the option echo=T for the entire document
library("airGRteaching")
data(L0123001)
BasinObs2 <- BasinObs[,c("DatesR", "P", "E", "Qmm","T")]
PREP <- PrepGR(ObsDF = BasinObs2, HydroModel = "GR4J", CemaNeige = FALSE)
plot(PREP,main = "L0123001")
PERIOD = c("1985-01-01", "2012-12-31")
plot(CAL_NSE,main = "L0123001 - GR4J - NSE")
#If include=FALSE, knitr will not display the code in the code chunk
#If echo=TRUE, knitr will display the result of executing the code in the code chunk
knitr::opts_chunk$set(echo = TRUE) # sets the option echo=T for the entire document
library("airGRteaching")
data(L0123001)
BasinObs2 <- BasinObs[,c("DatesR", "P", "E", "Qmm","T")]
PREP <- PrepGR(ObsDF = BasinObs2, HydroModel = "GR4J", CemaNeige = FALSE)
plot(PREP,main = "L0123001")
PERIOD = c("1985-01-01", "2012-12-31")
CAL_NSE <- CalGR(PrepGR = PREP, CalCrit = "NSE", CalPer = PERIOD, WupPer = NULL)
CAL_NSE$OutputsCalib$CritFinal
CAL_NSE$OutputsCalib$ParamFinalR
plot(CAL_NSE,main = "L0123001 - GR4J - NSE")
CAL_KGE2 <- CalGR(PrepGR = PREP, CalCrit = "KGE2", CalPer = PERIOD, WupPer = NULL)
CAL_KGE2$OutputsCalib$CritFinal
CAL_KGE2$OutputsCalib$ParamFinalR
plot(CAL_KGE2, main="L0123001 - GR4J - KGE")
CAL_NSE_INV <- CalGR(PrepGR = PREP, CalCrit = "NSE", CalPer = PERIOD, transfo = "inv")
CAL_NSE_INV$OutputsCalib$CritFinal
CAL_NSE_INV$OutputsCalib$ParamFinalR
plot(CAL_NSE_INV, main ="L0123001 - GR4J - NSE(1/Q)")
CRIT = "KGE2"
PERIOD2 = c("1994-01-01", "1994-12-31")
WP1 = c("1993-12-01", "1993-12-31")
WP2 = c("1993-06-01", "1993-12-31")
WP3 = c("1993-01-01", "1993-12-31")
WP4 = c("1992-01-01", "1993-12-31")
CAL_WP1 <- CalGR(PrepGR = PREP, CalCrit = CRIT, WupPer = WP1, CalPer = PERIOD2)
CAL_WP2 <- CalGR(PrepGR = PREP, CalCrit = CRIT, WupPer = WP2, CalPer = PERIOD2)
CAL_WP3 <- CalGR(PrepGR = PREP, CalCrit = CRIT, WupPer = WP3, CalPer = PERIOD2)
CAL_WP4 <- CalGR(PrepGR = PREP, CalCrit = CRIT, WupPer = WP4, CalPer = PERIOD2)
#final value of the criterion
CAL_WP1$OutputsCalib$CritFinal
CAL_WP2$OutputsCalib$CritFinal
CAL_WP3$OutputsCalib$CritFinal
CAL_WP4$OutputsCalib$CritFinal
#final parameter set
CAL_WP1$OutputsCalib$ParamFinalR
CAL_WP2$OutputsCalib$ParamFinalR
CAL_WP3$OutputsCalib$ParamFinalR
CAL_WP4$OutputsCalib$ParamFinalR
plot(SIM, main="Simulation")
#If include=FALSE, knitr will not display the code in the code chunk
#If echo=TRUE, knitr will display the result of executing the code in the code chunk
knitr::opts_chunk$set(echo = TRUE) # sets the option echo=T for the entire document
library("airGRteaching")
data(L0123001)
BasinObs2 <- BasinObs[,c("DatesR", "P", "E", "Qmm","T")]
PREP <- PrepGR(ObsDF = BasinObs2, HydroModel = "GR4J", CemaNeige = FALSE)
plot(PREP,main = "L0123001")
PERIOD = c("1985-01-01", "2012-12-31")
CAL_NSE <- CalGR(PrepGR = PREP, CalCrit = "NSE", CalPer = PERIOD, WupPer = NULL)
CAL_NSE$OutputsCalib$CritFinal
CAL_NSE$OutputsCalib$ParamFinalR
plot(CAL_NSE,main = "L0123001 - GR4J - NSE")
CAL_KGE2 <- CalGR(PrepGR = PREP, CalCrit = "KGE2", CalPer = PERIOD, WupPer = NULL)
CAL_KGE2$OutputsCalib$CritFinal
CAL_KGE2$OutputsCalib$ParamFinalR
plot(CAL_KGE2, main="L0123001 - GR4J - KGE")
CAL_NSE_INV <- CalGR(PrepGR = PREP, CalCrit = "NSE", CalPer = PERIOD, transfo = "inv")
CAL_NSE_INV$OutputsCalib$CritFinal
CAL_NSE_INV$OutputsCalib$ParamFinalR
plot(CAL_NSE_INV, main ="L0123001 - GR4J - NSE(1/Q)")
CRIT = "KGE2"
PERIOD2 = c("1994-01-01", "1994-12-31")
WP1 = c("1993-12-01", "1993-12-31")
WP2 = c("1993-06-01", "1993-12-31")
WP3 = c("1993-01-01", "1993-12-31")
WP4 = c("1992-01-01", "1993-12-31")
CAL_WP1 <- CalGR(PrepGR = PREP, CalCrit = CRIT, WupPer = WP1, CalPer = PERIOD2)
CAL_WP2 <- CalGR(PrepGR = PREP, CalCrit = CRIT, WupPer = WP2, CalPer = PERIOD2)
CAL_WP3 <- CalGR(PrepGR = PREP, CalCrit = CRIT, WupPer = WP3, CalPer = PERIOD2)
CAL_WP4 <- CalGR(PrepGR = PREP, CalCrit = CRIT, WupPer = WP4, CalPer = PERIOD2)
#final value of the criterion
CAL_WP1$OutputsCalib$CritFinal
CAL_WP2$OutputsCalib$CritFinal
CAL_WP3$OutputsCalib$CritFinal
CAL_WP4$OutputsCalib$CritFinal
#final parameter set
CAL_WP1$OutputsCalib$ParamFinalR
CAL_WP2$OutputsCalib$ParamFinalR
CAL_WP3$OutputsCalib$ParamFinalR
CAL_WP4$OutputsCalib$ParamFinalR
P1 = c("1985-01-01", "1994-12-31")
P2 = c("2003-01-01", "2012-12-31")
BasinObsP1=BasinObs2[BasinObs2$DatesR>=P1[1] & BasinObs2$DatesR<=P1[2],]
BasinObsP2=BasinObs2[BasinObs2$DatesR>=P2[1] & BasinObs2$DatesR<=P2[2],]
summary(BasinObsP1)
summary(BasinObsP2)
CAL1_P1 <- CalGR(PrepGR = PREP, CalCrit = CRIT, CalPer = P1)
SIM1_P2 <- SimGR(PrepGR = PREP, CalGR = CAL1_P1, EffCrit = CRIT, SimPer = P2)
CAL2_P2 <- CalGR(PrepGR = PREP, CalCrit = CRIT, CalPer = P2)
SIM2_P1 <- SimGR(PrepGR = PREP, CalGR = CAL2_P2, EffCrit = CRIT, SimPer = P1)
#Calibration - final value of the criterion
CAL1_P1$OutputsCalib$CritFinal
CAL2_P2$OutputsCalib$CritFinal
#Calibration - final parameter set
CAL1_P1$OutputsCalib$ParamFinalR
CAL2_P2$OutputsCalib$ParamFinalR
#Validation - value of the criterion
SIM1_P2$EffCrit$CritValue
SIM2_P1$EffCrit$CritValue
CAL = CAL2_P2
PCAL = P2
X1= CAL$OutputsCalib$ParamFinalR[1]
X2= CAL$OutputsCalib$ParamFinalR[2]
X3= CAL$OutputsCalib$ParamFinalR[3]
X4= CAL$OutputsCalib$ParamFinalR[4]
PARM = c(X1,X2,X3,X4)
PSIM= c("1995-01-01", "2002-12-31")
SIM <- SimGR(PrepGR = PREP, Param = CAL, EffCrit = CRIT, SimPer = PSIM)
plot(SIM, main="Simulation")
print(PARM)
name="X1"
i=as.integer(substr(name, start = 2, stop =2))
i
plot(SGR_X[,9],SGR_X$CritValue,
main="Sensitivity study",
ylab=CRIT,xlab=name)
SGR_X=data.frame()
for(X in rX){
P=PARM
P[i]=X
S <- SimGR(PrepGR = PREP,Param = P, EffCrit = CRIT, SimPer = PCAL)
SX = SummaryGR(S)
SX$X1=P[1]
SX$X2=P[2]
SX$X3=P[3]
SX$X4=P[4]
SX[,name]=X
SGR_X=rbind(SGR_X,SX)
}
Xmin=PARM[i]*0.5
Xmax=PARM[i]*1.5
dX = (Xmax-Xmin)/10
rX=seq(Xmin,Xmax,dX)
SGR_X=data.frame()
for(X in rX){
P=PARM
P[i]=X
S <- SimGR(PrepGR = PREP,Param = P, EffCrit = CRIT, SimPer = PCAL)
SX = SummaryGR(S)
SX$X1=P[1]
SX$X2=P[2]
SX$X3=P[3]
SX$X4=P[4]
SX[,name]=X
SGR_X=rbind(SGR_X,SX)
}
plot(SGR_X[,9],SGR_X$CritValue,
main="Sensitivity study",
ylab=CRIT,xlab=name)
#Function SummaryGR
#extract main data from airGRteaching object
SummaryGR<-function(ObjGR){
SGR = NULL
if(is(ObjGR)=="CalGR"){
TypeRun = "CAL"
TypeModel = ObjGR$TypeModel
CritName = ObjGR$OutputsCalib$CritName
CritValue = round(ObjGR$OutputsCalib$CritFinal,4)
RunFirst = as.character(ObjGR$PeriodModel$Run[1])
RunLast = as.character(ObjGR$PeriodModel$Run[2])
WarmUpFisrt = as.character(ObjGR$PeriodModel$WarmUp[1])
WarmUpLast = as.character(ObjGR$PeriodModel$WarmUp[2])
X1 = round(ObjGR$OutputsCalib$ParamFinalR[1],2)
X2 = round(ObjGR$OutputsCalib$ParamFinalR[2],4)
X3 = round(ObjGR$OutputsCalib$ParamFinalR[3],2)
X4 = round(ObjGR$OutputsCalib$ParamFinalR[4],3)
SGR = data.frame(TypeRun,TypeModel,CritName,CritValue,
RunFirst,RunLast,WarmUpFisrt,WarmUpLast,
X1,X2,X3,X4)
}else if(is(ObjGR)=="SimGR"){
TypeRun = "SIM"
TypeModel = ObjGR$TypeModel
CritName = ObjGR$EffCrit$CritName
CritValue = round(ObjGR$EffCrit$CritValue,4)
RunFirst = as.character(ObjGR$PeriodModel$Run[1])
RunLast = as.character(ObjGR$PeriodModel$Run[2])
WarmUpFisrt = as.character(ObjGR$PeriodModel$WarmUp[1])
WarmUpLast = as.character(ObjGR$PeriodModel$WarmUp[2])
X1 = NA
X2 = NA
X3 = NA
X4 = NA
SGR = data.frame(TypeRun,TypeModel,CritName,CritValue,
RunFirst,RunLast,WarmUpFisrt,WarmUpLast,
X1,X2,X3,X4)
}
return(SGR)
}
print(PARM)
name="X1"
i=as.integer(substr(name, start = 2, stop =2))
Xmin=PARM[i]*0.5
Xmax=PARM[i]*1.5
dX = (Xmax-Xmin)/10
rX=seq(Xmin,Xmax,dX)
SGR_X=data.frame()
for(X in rX){
P=PARM
P[i]=X
S <- SimGR(PrepGR = PREP,Param = P, EffCrit = CRIT, SimPer = PCAL)
SX = SummaryGR(S)
SX$X1=P[1]
SX$X2=P[2]
SX$X3=P[3]
SX$X4=P[4]
SX[,name]=X
SGR_X=rbind(SGR_X,SX)
}
plot(SGR_X[,9],SGR_X$CritValue,
main="Sensitivity study",
ylab=CRIT,xlab=name)
points(PARM[i],CAL$OutputsCalib$CritFinal,col="black",pch=18,cex=2)
View(SummaryGR)
Pcal
PCAL
# If include=FALSE, knitr will not display the code in the code chunk above, only its result.
knitr::opts_chunk$set(echo = TRUE)
# install.package("airGRteaching")
library("airGRteaching")
data(L0123001)
str(BasinInfo)
max(BasinObs$T)
plot(BasinInfo$HypsoData,
main = "L0123001- Hypsometric curve",
ylab = "Elevation (meters over msl)",xlab="Area percentage",
xlim=c(0,100),ylim=c(200,1400),
type="l", lwd=3)
median(BasinInfo$HypsoData)
max(BasinInfo$HypsoData)
str(BasinObs)
head(BasinObs)
min(BasinObs$DatesR)
max(BasinObs$DatesR)
summary(BasinObs)
QlsperNA <- ((802+772)/10593)*100
print(QlsperNA)
plot(BasinObs$DatesR, BasinObs$Qls, xlab = 'Years', ylab = 'Qls (m3/sec)', main = "Time Series", lty = 1, cex = 0.50, col = viridis(n=256, option = "D"))
Pm=mean(BasinObs$P)
Em=mean(BasinObs$E)
Qm=mean(BasinObs$Qmm,na.rm=T)
print(c(Pm,Em,Qm))
WaterBalance=Pm-Em-Qm
print(WaterBalance)
RunoffCoeff= Qm/Pm
print(RunoffCoeff)
BasinObsQ<-BasinObs[which(!is.na(BasinObs$Qls)),]
# BasinObsQ<-BasinObs[is.na(BasinObs$Qls)==...,]
Qmonth<-aggregate(BasinObsQ$Qls/1000, list(format(BasinObsQ$DatesR,"%m")), FUN=mean)
colnames(Qmonth)<-c("Month","Qm3s")
summary(Qmonth)
plot(Qmonth$Qm3s,
main = "L0123001- hydrological regime",
ylab = "Average monthly discharge in m3/s",xlab="Month",
xlim=c(1,12),ylim=c(0,12),
type="h", lwd=10)
Psum<-aggregate(BasinObs$P, list(format(BasinObs$DatesR, "%Y-%m")), FUN=sum)
colnames(Psum)<-c("Date","P")
Psum$Date <- as.POSIXct(paste(Psum$Date,"01",sep="-")) # paste is used for concatenating/ binding the                                                               strings together" , # if we do not write                                                               as.PosIexct then it wont show it as date
Pmonth<-aggregate(Psum$P, list(format(Psum$Date,"%m")), FUN=mean)
summary(Pmonth)
plot(Pmonth,
main = "L0123001- pluvial regime",
ylab = "Average monthly precipitation in mm",xlab="Month",
xlim=c(1,12),ylim=c(0,120),
type="h", lwd=10)
BasinObs2 <- BasinObs[,c("DatesR","P","E","Qmm","T")]
PREP <- PrepGR(ObsDF = BasinObs2, HydroModel = "GR4J", CemaNeige = FALSE)
is(PREP)
typeof(PREP)
str(PREP)
plot(PREP,main="L0123001 - Observation")
# ShinyGR(ObsDF = BasinObs2, SimPer = c("1994-01-01", "1998-12-31"),NamesObsBV = "Low-land basin")
CAL <- CalGR(PrepGR = PREP, CalCrit = "NSE", WupPer = NULL, CalPer = c("1994-01-01", "1998-12-31"))
is(CAL)
typeof(CAL)
str(CAL)
CAL$OutputsCalib$CritName
CAL$OutputsCalib$CritFinal
CAL$OutputsCalib$NIter
CAL$OutputsCalib$ParamFinalR
plot(CAL, which = "perf")
plot(CAL, which = "iter")
SIM <- SimGR(PrepGR = PREP , CalGR = CAL, EffCrit = "NSE", WupPer = NULL,
SimPer = c("1999-01-01", "2000-12-31"))
is(SIM)
typeof(SIM)
str(SIM)
SIM$EffCrit$CritName
SIM$EffCrit$CritValue
plot(SIM)
detach("package:viridisLite", unload = TRUE)
library(viridisLite)
detach("package:viridis", unload = TRUE)
library(viridis)
library(viridis)
plot(BasinObs$DatesR, BasinObs$Qls, xlab = 'Years', ylab = 'Qls (m3/sec)', main = "Time Series", lty = 1, cex = 0.50, col = viridis(n=256, option = "D"))
library(viridis)
plot(BasinObs$DatesR, BasinObs$Qls, xlab = 'Years', ylab = 'Qls (m3/sec)', main = "Time Series", lty = 1, cex = 0.50, col = viridis(n=256, option = "D"))
